"17", "18", "20", "21", "22", "24", "25", "26")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(x="", y="# related crimes in 2019", caption=paste0("Part 1 crimes make up ",
paste0(n, "% of crimes")))
n <- (length(row.names(part.one.crimes)) / length(row.names(dat))) * 100
ggplot(dat, aes(Category)) +
geom_bar() +
scale_x_discrete(labels = c("Homicide", "Rape", "Robbery", "Aggravated Assault",
"Burglary", "Larceny", "Vehicle Theft", "Arson",
"09", "10", "11", "12", "13", "14", "15", "16",
"17", "18", "20", "21", "22", "24", "25", "26")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(x="", y="# related crimes in 2019", caption=paste0("Part 1 crimes make up ",
paste0(n, "% of crimes")))
ggplot(dat, aes(Category)) +
geom_bar() +
scale_x_discrete(labels = c("Homicide", "Rape", "Robbery", "Aggravated Assault",
"Burglary", "Larceny", "Vehicle Theft", "Arson",
"09", "10", "11", "12", "13", "14", "15", "16",
"17", "18", "20", "21", "22", "24", "25", "26")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(x="", y="# related crimes in 2019", caption=paste0("Part 1 crimes make up ",
paste0(formatC(n, format = "f", digits = 2),
"% of crimes")))
# Add leading 0 to Crime codes that were automatically truncated when reading in CSV files
dat$Crime <- formatC(dat$Crime, width=6, format="d", flag="0")
# Grab first 2 characters of Crime codes
dat$Category <- substring(dat$Crime, 0, 2)
part.one.crimes <- subset(dat, dat$Category %in% c("01", "02", "03", "04", "05", "06", "07", "08"))
n <- (length(row.names(part.one.crimes)) / length(row.names(dat))) * 100
ggplot(dat, aes(Category)) +
geom_bar() +
scale_x_discrete(labels = c("Homicide", "Rape", "Robbery", "Aggravated Assault",
"Burglary", "Larceny", "Vehicle Theft", "Arson",
"09", "10", "11", "12", "13", "14", "15", "16",
"17", "18", "20", "21", "22", "24", "25", "26")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(x="", y="# crimes in 2019", caption=paste0("Part 1 crimes make up ",
paste0(formatC(n, format = "f", digits = 2),
"% of crimes")))
ggplot(dat, aes(Category)) +
geom_bar() +
scale_x_discrete(labels = c("Homicide", "Rape", "Robbery", "Aggravated Assault",
"Burglary", "Larceny", "Vehicle Theft", "Arson",
"09", "10", "11", "12", "13", "14", "15", "16",
"17", "18", "20", "21", "22", "24", "25", "26")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(x="", y="# crimes in 2019", caption=paste0("Part 1 crimes make up ",
paste0(formatC(n, format = "f", digits = 2),
"% of crimes")))
library(ggplot2)
library(tidyr)
library(dplyr)
library(gganimate)
library(ggthemr)
library(ggmap)
library(rgdal) # NAD83 to lat/lon conversion
setwd("~/Desktop/Data-Science-Portfolio/Projects/STLCrime")
### DATA IMPORT
# Import data, subset some columns, and create a few helper columns
# Months available
months <- c("January", "February", "March",
"April", "May", "June",
"July", "August", "September",
"October", "November", "December")
# Years available
years <- c("2016", "2017", "2018", "2019")
# Columns of interest that appear in each dataset
cols <- c("Complaint", "CodedMonth", "DateOccur", "FlagCrime",
"Count", "Crime", "District", "ILEADSAddress",
"ILEADSStreet", "LocationName", "LocationComment",
"Neighborhood", "XCoord", "YCoord")
dat <- NULL
for (year in years) {
for (month in months) {
# Path to data file
filename <- paste0("Datasets/", month, year, ".csv")
file_data <- read.csv(filename)
# Some datasets include periods in their column names. Remove them
names(file_data) <- gsub("\\.", "", names(file_data))
# Add a leading 0 to crime codes that got truncated
file_data$Crime <- formatC(file_data$Crime, width=6, format="d", flag="0")
# Subset to the columns of potential interest that are common
# to all datasets
file_data <- subset(file_data, select = cols)
# Remove reports that are not coded as actual crimes
file_data <- subset(file_data, file_data$Count == 1)
# Set a flag for crimes that are considered "Class I" crimes and "Class II" crimes
file_data$ClassI <- ifelse(as.numeric(substr(file_data$Crime, start = 1, stop = 2)) < 9, 1, 0)
file_data$ClassII <- ifelse(file_data$ClassI == 1, 0, 1)
# Split up year and month info
file_data$Month <- as.numeric(substr(file_data$CodedMonth, start = 6, stop = 7))
file_data$Year <- as.numeric(substr(file_data$CodedMonth, start = 1, stop = 4))
# Combine datasets into a single data.frame
if (is.null(dat)) dat <- file_data
else dat <- rbind(dat, file_data)
}
}
myLocation <- c(-90.3, 38.58 , -90.18, 38.67)
myMap <- get_map(location=myLocation,
source="google",
maptype="satellite",
crop=F)
# May be interestesting to compare different years?
# Haven't decided if I want to plot all years together,
# separately, or just a single year
sub <- subset(dat, year(dat$DateObj) > "2018")
knitr::opts_chunk$set(echo = TRUE)
# Load libraries that we'll be doing
library(ggplot2) # For plotting
library(gganimate) # For plotting
library(ggthemr) # For plotting
library(tidyr) # For formatting data
library(dplyr) # For formatting data
library(scales) # For plotting
library(lubridate) # For handling dates
library(gridExtra) # For plotting multiple plots
library(ggmap) # For getting Google Maps data
library(rgdal) # For conversion of map coordinates
library(png) # For displaying images
library(grid) # For displaying images
# May be interestesting to compare different years?
# Haven't decided if I want to plot all years together,
# separately, or just a single year
sub <- subset(dat, year(dat$DateObj) > "2018")
# May be interestesting to compare different years?
# Haven't decided if I want to plot all years together,
# separately, or just a single year
sub <- subset(dat, year(dat$DateObj) > "2018")
class(sub$DateObj)
sub$DateObj
### DATA IMPORT
# Import data, subset some columns, and create a few helper columns
# Months available
months <- c("January", "February", "March",
"April", "May", "June",
"July", "August", "September",
"October", "November", "December")
# Years available
years <- c("2016", "2017", "2018", "2019")
# Columns of interest that appear in each dataset
cols <- c("Complaint", "CodedMonth", "DateOccur", "FlagCrime",
"Count", "Crime", "District", "ILEADSAddress",
"ILEADSStreet", "LocationName", "LocationComment",
"Neighborhood", "XCoord", "YCoord")
dat <- NULL
# Iteratively load each data file, and merge into a single data.frame
for (year in years) {
for (month in months) {
# Path to data file
filename <- paste0("Datasets/", month, year, ".csv")
file_data <- read.csv(filename)
# Some datasets include periods in their column names. Remove them
names(file_data) <- gsub("\\.", "", names(file_data))
# Subset to the columns of potential interest that are common to all datasets
file_data <- subset(file_data, select = cols)
# Combine datasets into a single data.frame
if (is.null(dat)) dat <- file_data
else dat <- rbind(dat, file_data)
}
}
# Add a leading 0 to crime codes that got truncated
dat$Crime <- formatC(dat$Crime, width=6, format="d", flag="0")
# Remove reports that are not coded as actual crimes
dat <- subset(dat, dat$Count == 1)
# Set a flag for crimes that are considered "Class I" crimes and "Class II" crimes
dat$ClassI <- ifelse(as.numeric(substr(dat$Crime, start = 1, stop = 2)) < 9, 1, 0)
dat$ClassII <- ifelse(dat$ClassI == 1, 0, 1)
# Split up info from the date/time of the event
dat$Date <- substr(dat$DateOccur, start = 1, stop = 10)
dat$Date <- gsub("/", "-", dat$Date)
dat$Time <- substr(dat$DateOccur, start = 12, stop = 16)
dat$DateObj <- as.Date(dat$Date, format = "%m-%d-%Y")
dat # Take a peek at our data.frame
# May be interestesting to compare different years?
# Haven't decided if I want to plot all years together,
# separately, or just a single year
sub <- subset(dat, year(dat$DateObj) > "2018")
nad83_coords <- data.frame(x=sub$XCoord, y=sub$YCoord)
nad83_coords$x <- nad83_coords$x * .3048
nad83_coords$y <- nad83_coords$y * 0.3048
coordinates(nad83_coords) <- c("x","y")
proj4string(nad83_coords)=CRS("+init=epsg:6512")#epsg:6512, 3602
coords <- spTransform(nad83_coords,CRS("+init=epsg:4326"))
coords <- data.frame(coords@coords)
names(coords) <- c("lon", "lat")
sub$Long <- coords$lon
sub$Lat <- coords$lat
sub$Month <- month(sub$DateObj)
sub <- subset(sub, sub$ClassI == 1)
sub$Category <- substring(sub$Crime, 0, 2)
categories <- c("Homicide", "Rape", "Robbery", "Aggravated Assault",
"Burglary", "Larceny", "Vehicle Theft", "Arson")
sub$Category <- categories[as.numeric(sub$Category)]
sub$Category <- factor(sub$Category, levels = categories)
ggmap(myMap) +
stat_density2d(
aes(x = Long, y = Lat, fill = ..level..),
size = 0.05, bins = 5, data = sub,
geom = "polygon", alpha=0.4
) +
scale_fill_distiller(palette = "Blues") +
#geom_density2d(data = sub,
#               aes(x = Long, y = Lat), size = 0.3) +
#geom_polygon(data=shp, aes(x=long,y=lat,group=group),colour="black", fill=NA) +
labs(x="Longitude",y="Latitude",
title="Crime Location") +
scale_x_continuous(limits = c(-90.3, -90.182)) +
scale_y_continuous(limits = c(38.56, 38.67)) +
theme(legend.position = "none") +
transition_states(data = sub,
Month,
transition_length = 12,
state_length = 1,
wrap = F
)
ggmap(myMap) +
stat_density2d(
aes(x = Long, y = Lat, fill = ..level..),
size = 0.05, bins = 5, data = sub,
geom = "polygon", alpha=0.4
) +
scale_fill_distiller(palette = "Blues") +
#geom_density2d(data = sub,
#               aes(x = Long, y = Lat), size = 0.3) +
#geom_polygon(data=shp, aes(x=long,y=lat,group=group),colour="black", fill=NA) +
labs(x="Longitude",y="Latitude",
title="Crime Location") +
scale_x_continuous(limits = c(-90.3, -90.182)) +
scale_y_continuous(limits = c(38.56, 38.67)) +
theme(legend.position = "none") +
transition_states(
Month,
transition_length = 12,
state_length = 1,
wrap = F
)
install.packages("tranformr")
if(!requireNamespace("devtools")) install.packages("devtools")
devtools::install_github("thomasp85/transformr")
library(transformr)
ggmap(myMap) +
stat_density2d(
aes(x = Long, y = Lat, fill = ..level..),
size = 0.05, bins = 5, data = sub,
geom = "polygon", alpha=0.4
) +
scale_fill_distiller(palette = "Blues") +
#geom_density2d(data = sub,
#               aes(x = Long, y = Lat), size = 0.3) +
#geom_polygon(data=shp, aes(x=long,y=lat,group=group),colour="black", fill=NA) +
labs(x="Longitude",y="Latitude",
title="Crime Location") +
scale_x_continuous(limits = c(-90.3, -90.182)) +
scale_y_continuous(limits = c(38.56, 38.67)) +
theme(legend.position = "none") +
transition_states(
Month,
transition_length = 12,
state_length = 1,
wrap = F
)
StatDensityContour <- ggproto('StatDensityContour', StatDensity2d,
compute_group = function (data, scales, na.rm = FALSE, h = NULL, contour = TRUE,
n = 100, bins = NULL, binwidth = NULL) {
StatDensity2d$compute_group(data, scales, na.rm = na.rm, h = h, contour = FALSE,
n = n, bins = bins, binwidth = binwidth)
},
finish_layer = function(self, data, params) {
names(data)[names(data) == 'density'] <- 'z'
do.call(rbind, lapply(split(data, data$PANEL), function(d) {
StatContour$compute_panel(d, scales = NULL, bins = params$bins,
binwidth = params$binwidth)
}))
}
)
ggmap(myMap) +
# stat_density2d(
#    aes(x = Long, y = Lat, fill = ..level..),
#    size = 0.05, bins = 5, data = sub,
#    geom = "polygon", alpha=0.4
#  ) +
geom_contour(data = sub,
aes(x=Long,y=Lat, fill = ..level..))
ggmap(myMap) +
# stat_density2d(
#    aes(x = Long, y = Lat, fill = ..level..),
#    size = 0.05, bins = 5, data = sub,
#    geom = "polygon", alpha=0.4
#  ) +
geom_contour(data = sub,
aes(x=Long,y=Lat, fill = ..level..), stat = "density_countour")
ggmap(myMap) +
# stat_density2d(
#    aes(x = Long, y = Lat, fill = ..level..),
#    size = 0.05, bins = 5, data = sub,
#    geom = "polygon", alpha=0.4
#  ) +
geom_contour(data = sub,
aes(x=Long,y=Lat, fill = ..level..), stat = "StatDensityContour")
ggmap(myMap) +
# stat_density2d(
#    aes(x = Long, y = Lat, fill = ..level..),
#    size = 0.05, bins = 5, data = sub,
#    geom = "polygon", alpha=0.4
#  ) +
geom_contour(data = sub,
aes(x=Long,y=Lat, fill = ..level..), stat = "density_contour")
ggmap(myMap) +
# stat_density2d(
#    aes(x = Long, y = Lat, fill = ..level..),
#    size = 0.05, bins = 5, data = sub,
#    geom = "polygon", alpha=0.4
#  ) +
geom_contour(data = sub,
aes(x=Long,y=Lat, fill = ..level..), stat = "density_contour")
ggmap(myMap) +
# stat_density2d(
#    aes(x = Long, y = Lat, fill = ..level..),
#    size = 0.05, bins = 5, data = sub,
#    geom = "polygon", alpha=0.4
#  ) +
geom_contour(data = sub,
aes(x=Long,y=Lat, fill = ..level..), stat = "density_contour") +
scale_fill_distiller(palette = "Blues") +
#geom_density2d(data = sub,
#               aes(x = Long, y = Lat), size = 0.3) +
#geom_polygon(data=shp, aes(x=long,y=lat,group=group),colour="black", fill=NA) +
labs(x="Longitude",y="Latitude",
title="Crime Location") +
scale_x_continuous(limits = c(-90.3, -90.182)) +
scale_y_continuous(limits = c(38.56, 38.67)) +
theme(legend.position = "none") +
transition_states(
Month,
transition_length = 12,
state_length = 1,
wrap = F
)
projectgif <- ggmap(myMap) +
# stat_density2d(
#    aes(x = Long, y = Lat, fill = ..level..),
#    size = 0.05, bins = 5, data = sub,
#    geom = "polygon", alpha=0.4
#  ) +
geom_contour(data = sub,
aes(x=Long,y=Lat, fill = ..level..), stat = "density_contour") +
scale_fill_distiller(palette = "Blues") +
#geom_density2d(data = sub,
#               aes(x = Long, y = Lat), size = 0.3) +
#geom_polygon(data=shp, aes(x=long,y=lat,group=group),colour="black", fill=NA) +
labs(x="Longitude",y="Latitude",
title="Crime Location") +
scale_x_continuous(limits = c(-90.3, -90.182)) +
scale_y_continuous(limits = c(38.56, 38.67)) +
theme(legend.position = "none") +
transition_states(
Month,
transition_length = 12,
state_length = 1,
wrap = F
)
anim_save("project_gif.gif", animation = animate(projectgif))
ggmap(myMap) +
stat_density2d(
aes(x = Long, y = Lat, fill = ..level..),
size = 0.05, bins = 5, data = sub,
geom = "polygon", alpha=0.4
) +
scale_fill_distiller(palette = "Blues")
ggmap(myMap) +
stat_density2d(
aes(x = Long, y = Lat, fill = ..level..),
size = 0.05, bins = 5, data = sub,
geom = "polygon", alpha=0.4
) +
scale_fill_distiller(palette = "Blues") +
#geom_density2d(data = sub,
#               aes(x = Long, y = Lat), size = 0.3) +
geom_polygon(data=shp, aes(x=long,y=lat,group=group),colour="black", fill=NA) +
labs(x="Longitude",y="Latitude",
title="Locations of Crimes within SLMPD Boundaries") +
transition_states(
Month,
transition_length = 12,
state_length = 1
)
ggmap(myMap) +
stat_density2d(
aes(x = Long, y = Lat, fill = ..level..),
size = 0.05, bins = 5, data = sub,
geom = "polygon", alpha=0.4
) +
scale_fill_distiller(palette = "Blues") +
#geom_density2d(data = sub,
#               aes(x = Long, y = Lat), size = 0.3) +
#geom_polygon(data=shp, aes(x=long,y=lat,group=group),colour="black", fill=NA) +
labs(x="Longitude",y="Latitude",
title="Locations of Crimes within SLMPD Boundaries") +
transition_states(
Month,
transition_length = 12,
state_length = 1
)
projectgif <- ggmap(myMap) +
# stat_density2d(
#    aes(x = Long, y = Lat, fill = ..level..),
#    size = 0.05, bins = 5, data = sub,
#    geom = "polygon", alpha=0.4
#  ) +
geom_contour(data = sub,
aes(x=Long,y=Lat, fill = ..level..), stat = "density_contour") +
scale_fill_distiller(palette = "Blues") +
#geom_density2d(data = sub,
#               aes(x = Long, y = Lat), size = 0.3) +
#geom_polygon(data=shp, aes(x=long,y=lat,group=group),colour="black", fill=NA) +
labs(x="Longitude",y="Latitude",
title="Crime Location - {closest_state}") +
scale_x_continuous(limits = c(-90.3, -90.182)) +
scale_y_continuous(limits = c(38.56, 38.67)) +
theme(legend.position = "none") +
transition_states(
Month,
transition_length = 12,
state_length = 1,
wrap = F
)
animate(projectgif)
sub$Month <- month.abb(sub$DateObj)
month.abb()
month.abb
month.abb[sub$DateObj]
month.abb(1)
month.abb[1]
month.abb[(sub$DateObj)]
month.abb[sub$Month]
sub$Month <- month.abb[month(sub$DateObj))]
sub$Month <- month(sub$DateObj)
sub$Month <- month.abb[sub$Month]
summary(sub$Month)
sub$Month <- factor(sub$Month, levels = month.abb)
summary(sub$Month)
projectgif <- ggmap(myMap) +
# stat_density2d(
#    aes(x = Long, y = Lat, fill = ..level..),
#    size = 0.05, bins = 5, data = sub,
#    geom = "polygon", alpha=0.4
#  ) +
geom_contour(data = sub,
aes(x=Long,y=Lat, fill = ..level..), stat = "density_contour") +
scale_fill_distiller(palette = "Blues") +
#geom_density2d(data = sub,
#               aes(x = Long, y = Lat), size = 0.3) +
#geom_polygon(data=shp, aes(x=long,y=lat,group=group),colour="black", fill=NA) +
labs(x="Longitude",y="Latitude",
title="Crime Location - {closest_state}") +
scale_x_continuous(limits = c(-90.3, -90.182)) +
scale_y_continuous(limits = c(38.56, 38.67)) +
theme(legend.position = "none") +
transition_states(
Month,
transition_length = 12,
state_length = 1,
wrap = F
)
projectgif <- ggmap(myMap) +
# stat_density2d(
#    aes(x = Long, y = Lat, fill = ..level..),
#    size = 0.05, bins = 5, data = sub,
#    geom = "polygon", alpha=0.4
#  ) +
geom_contour(data = sub,
aes(x=Long,y=Lat), stat = "density_contour") +
scale_fill_distiller(palette = "Blues") +
#geom_density2d(data = sub,
#               aes(x = Long, y = Lat), size = 0.3) +
#geom_polygon(data=shp, aes(x=long,y=lat,group=group),colour="black", fill=NA) +
labs(x="Longitude",y="Latitude",
title="Crime Location - {closest_state}") +
scale_x_continuous(limits = c(-90.3, -90.182)) +
scale_y_continuous(limits = c(38.56, 38.67)) +
theme(legend.position = "none") +
transition_states(
Month,
transition_length = 12,
state_length = 1,
wrap = F
)
projectgif <- ggmap(myMap) +
geom_contour(data = sub,
aes(x=Long,y=Lat), stat = "density_contour") +
#scale_fill_distiller(palette = "Blues") +
labs(x="Longitude",y="Latitude",
title="Crime Location - {closest_state}") +
scale_x_continuous(limits = c(-90.3, -90.182)) +
scale_y_continuous(limits = c(38.56, 38.67)) +
theme(legend.position = "none") +
transition_states(
Month,
transition_length = 12,
state_length = 1,
wrap = F
)
animate(projectgif)
anim_save("project_gif.gif", animation = animate(projectgif))
View(sub)
rm(list=ls())
reticulate::repl_python()
import re
n
reticulate::repl_python()
